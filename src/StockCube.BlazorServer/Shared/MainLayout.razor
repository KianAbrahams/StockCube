@inherits LayoutComponentBase

<PageTitle>Stock Cube</PageTitle>

<MudThemeProvider @ref="@_mudThemeProvider" @bind-IsDarkMode="@_isDarkMode" Theme="_theme"/>
<MudDialogProvider />
<MudSnackbarProvider />

<MudLayout>
    <MudAppBar Elevation="1" Dense="false">
        <MudIconButton Icon="@Icons.Material.Filled.Menu" Color="Color.Inherit" Edge="Edge.Start" OnClick="@((e) => this.OnDrawerToggleClick())" />
        <MudText Typo="Typo.h5">Stock Cube</MudText>
        <MudSpacer />
        <MudIconButton Icon="@_modeIcon" Color="Color.Inherit" OnClick="@((e) => OnIsDarkModeChanged(!_isDarkMode))" />
    </MudAppBar>
    <MudDrawer @bind-Open="@_drawerOpen" Width="140px" Variant="@DrawerVariant.Mini" ClipMode="DrawerClipMode.Always" Elevation="2">
        <MudNavMenu Dense="false">
            <MudNavLink Href="/kitchen" Icon="@Icons.Material.Outlined.Kitchen">Kitchen</MudNavLink>
            <MudNavLink Href="/recipes" Icon="@Icons.Material.Outlined.MenuBook">Recipes</MudNavLink>
            <MudNavLink Href="/shopping" Icon="@Icons.Material.Outlined.ShoppingCart">Shopping</MudNavLink>
        </MudNavMenu> 
    </MudDrawer>
    <MudMainContent>
        <MudContainer class="pa-4">
            @Body
        </MudContainer>
    </MudMainContent>
</MudLayout>

@code {
    // TODO: move to VM
    private Size _avatarSize = Size.Small;
    private string _modeIcon = Icons.Material.Outlined.WbSunny;
    private Color _appBarItemColor = Color.Primary;
    private MudTheme _theme = new(); // TODO: Save theme preferences https://www.thomasclaudiushuber.com/2021/04/19/store-data-of-your-blazor-app-in-the-local-storage-and-in-the-session-storage/
    private MudThemeProvider _mudThemeProvider = new();

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            var isDarkMode = await _mudThemeProvider.GetSystemPreference();
            OnIsDarkModeChanged(isDarkMode);
            StateHasChanged();
        }
    }

    private bool _drawerOpen = true;
    private void OnDrawerToggleClick() => _drawerOpen = !_drawerOpen;

    private bool _isDarkMode;
    private void OnIsDarkModeChanged(bool isDarkMode)
    {
        if (isDarkMode)
        {
            _appBarItemColor = Color.Primary;
            _modeIcon = Icons.Material.Outlined.WbSunny;
        }
        else
        {
            _appBarItemColor = Color.Tertiary;
            _modeIcon = Icons.Material.Outlined.Nightlight;

        }
        _isDarkMode = isDarkMode;
    }
}
